# handlers/commands.py

import logging
from aiogram import Router, types, Bot
from aiogram.filters import Command

import config
from keyboards import get_status_keyboard
from utils.time_utils import in_work_time
from core.database import load_statuses
from utils.status_manager import StatusManager


def build_welcome_text() -> str:
    return (
        "<b>ü§ñ AutoCouriersStatusBot</b>\n\n"
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∫—É—Ä—å–µ—Ä–æ–≤.\n\n"
        "‚û°Ô∏è –í –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫:\n"
        "   üè† ¬´–ë–∞–∑–∞¬ª      ‚Äî –≤—ã –Ω–∞ —Å–∫–ª–∞–¥–µ;\n"
        "   üöö ¬´–£–µ—Ö–∞–ª¬ª     ‚Äî –≤—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ;\n"
        "   üîß ¬´–°–ª–æ–º–∞–ª—Å—è¬ª  ‚Äî —É –≤–∞—Å –ø–æ–ª–æ–º–∫–∞;\n"
        "   üìã ¬´–ü–æ –¥–µ–ª–∞–º¬ª  ‚Äî –≤—ã –∑–∞–Ω—è—Ç—ã;\n"
        "   ‚õΩ ¬´–ó–∞–ø—Ä–∞–≤–∫–∞¬ª  ‚Äî –≤—ã –Ω–∞ –∑–∞–ø—Ä–∞–≤–∫–µ.\n\n"
        f"‚è∞ –ö–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã —Å {config.WORK_START_STR} –¥–æ {config.WORK_END_STR} ({config.TIMEZONE}).\n\n"
        "–í –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å–æ –º–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:\n"
        "  ‚Ä¢ /status ‚Äî —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞ –±–∞–∑–µ;\n"
        "  ‚Ä¢ /help   ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é."
    )

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command("start"))
async def cmd_start(message: types.Message, bot: Bot):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ / —Ç–µ–∫—Å—Ç –≤ –õ–°."""
    user = message.from_user
    logger.info(f"/start –æ—Ç {user.id} ({user.full_name})")
    text = build_welcome_text()
    if message.chat.type in ("group", "supergroup"):
        await message.answer(text, reply_markup=get_status_keyboard())
    else:
        await message.answer(text)

@router.message(Command("help"))
async def cmd_help(message: types.Message, bot: Bot):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–∞—è –≤ –õ–°."""
    text = (
        "üìñ *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è AutoCouriers StatusBot*\n\n"
        "1Ô∏è‚É£ –í –≥—Ä—É–ø–ø–µ –∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏:\n"
        "   üè† –ë–∞–∑–∞, üöö –£–µ—Ö–∞–ª, üîß –°–ª–æ–º–∞–ª—Å—è,\n"
        "   üìã –ü–æ –¥–µ–ª–∞–º, ‚õΩ –ó–∞–ø—Ä–∞–≤–∫–∞\n\n"
        "2Ô∏è‚É£ –ü—Ä–∏ –ø–µ—Ä–≤–æ–º ¬´–ë–∞–∑–∞¬ª –≤—ã—Å–∫–æ—á–∏—Ç –∑–∞–ø—Ä–æ—Å –ª–æ–∫–∞—Ü–∏–∏.\n"
        "3Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ /status –≤ –õ–° –≤—ã–¥–∞—ë—Ç –ø–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç.\n"
        "4Ô∏è‚É£ –ö–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å 06:55 –¥–æ 00:45."
    )
    success = await bot.send_message(message.from_user.id, text, parse_mode="Markdown")
    if not success:
        await message.reply("–û—Ç–∫—Ä–æ–π—Ç–µ –õ–° –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help –º–Ω–µ –ª–∏—á–Ω–æ.")

@router.message(Command("status"))
async def cmd_status(message: types.Message, bot: Bot):
    """–ü–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –õ–° –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á—ë—Ç —Å—Ç–∞—Ç—É—Å–æ–≤."""
    user = message.from_user
    if user.id not in config.AUTHORIZED_IDS:
        return await message.reply("‚ùå –ù–µ—Ç –ø—Ä–∞–≤.")
    report = StatusManager().get_report()
    success = await bot.send_message(user.id, report, parse_mode="HTML")
    if success:
        await message.reply("‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –õ–°.")
    else:
        await message.reply("‚ùó –û—Ç–∫—Ä–æ–π—Ç–µ –ª–∏—á–∫—É –±–æ—Ça –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ /status.")
