# handlers/callbacks.py

import logging
from aiogram import Router, types, Bot
from aiogram.filters.text import Text

import config
from keyboards import get_status_keyboard
from core.database import Database
from utils.time_utils import in_work_time

router = Router()
logger = logging.getLogger(__name__)
db = Database()

@router.callback_query(Text(startswith="status_"))
async def on_status_callback(cq: types.CallbackQuery, bot: Bot):
    user = cq.from_user

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if user.id not in config.AUTHORIZED_IDS:
        return await cq.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.", show_alert=True)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    if not in_work_time():
        return await cq.answer(
            f"‚è∞ –ö–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã —Å {config.WORK_START_STR} –¥–æ {config.WORK_END_STR} ({config.TIMEZONE}).",
            show_alert=True
        )

    key = cq.data.split("status_", 1)[1]
    labels = {
        "base": "üè† –ë–∞–∑–∞",
        "away": "üöö –£–µ—Ö–∞–ª",
        "broke": "üîß –°–ª–æ–º–∞–ª—Å—è",
        "busy": "üìã –ü–æ –¥–µ–ª–∞–º",
        "fuel": "‚õΩ –ó–∞–ø—Ä–∞–≤–∫–∞",
    }
    status_label = labels.get(key, key)

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î
    db.save_status(user.id, status_label)
    logger.info(f"User {user.id} set status {status_label}")

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await cq.answer(f"‚úÖ –°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {status_label}", show_alert=False)

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
    await bot.send_message(
        config.GROUP_CHAT_ID,
        f"{user.full_name} ‚Äî {status_label}",
        reply_markup=get_status_keyboard()
    )
