# utils/status_manager.py

import time
from aiogram import Bot
import config
from core.database import Database

class StatusManager:
    def __init__(self):
        self.db = Database()

    async def get_report(self, bot: Bot) -> str:
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–±—Ä–∞—Ç—å HTML‚Äë–æ—Ç—á—ë—Ç:
          ‚Ä¢ –ò–º—è ‚Äî –°—Ç–∞—Ç—É—Å (‚è± —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã –∏–ª–∏ –º–∏–Ω—É—Ç—ã)
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç bot, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–π —Å–µ—Å—Å–∏—é.
        """
        raw = self.db.load_statuses()  # { uid_str: {"status":‚Ä¶, "ts":‚Ä¶}, ‚Ä¶ }
        now = int(time.time())
        if not raw:
            return "‚ÑπÔ∏è –ü–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤."

        lines = ["üìã <b>–û—Ç—á—ë—Ç —Å—Ç–∞—Ç—É—Å–æ–≤ –∫—É—Ä—å–µ—Ä–æ–≤:</b>\n"]
        for uid_str, rec in raw.items():
            status = rec.get("status", "‚Äî")
            ts = rec.get("ts", now)
            elapsed = now - ts
            hours = int(elapsed // 3600)
            minutes = int((elapsed % 3600) // 60)
            timer = f"{hours:02d}:{minutes:02d}" if hours else f"{minutes:02d} –º–∏–Ω"
            # –ø–æ–ª—É—á–∞–µ–º –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
            try:
                member = await bot.get_chat_member(config.GROUP_CHAT_ID, int(uid_str))
                name = member.user.full_name
            except:
                name = f"<code>{uid_str}</code>"
            lines.append(f"‚Ä¢ <b>{name}</b> ‚Äî {status} (‚è± {timer})")

        return "\n".join(lines)
